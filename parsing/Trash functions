	@echo "$(R)$(LP)░░▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░░░░░░░░░$(R)$(RS)"
	@echo "$(R)$(LP)░░░░░░░░░░░░░░░░░░░░            ░░  ░░$(R)$(RS)"
	@echo "$(R)$(LP)░░██▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░▒▒░░░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)░░▓▓▒▒▒▒▒▒░░░░░░░░░░░░  ░░░░░░░░  ░░░░░░$(R)$(RS)"
	@echo "$(R)$(LP)░░░░░░  ░░░░  ░░    ░░░░    ░░    ░░░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                                                  ░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                                          ░░    ▒▒▒▒▒▒▓▓░░▓▓$(R)$(RS)"
	@echo "$(R)$(LP)                                                                        ▒▒▒▒▒▒  ▒▒░░▒▒▒▒▒▒▓▓$(R)$(RS)"
	@echo "$(R)$(LP)                                                    ▒▒░░░░░░    ▒▒▓▓▒▒░░▒▒▒▒▒▒░░  ▓▓▒▒▓▓▓▓$(R)$(RS)"
	@echo "$(R)$(LP)                                                  ░░░░░░░░▓▓  ▒▒▒▒▒▒▓▓  ▒▒░░░░░░▒▒▒▒▒▒▓▓▓▓$(R)$(RS)"
	@echo "$(R)$(LP)                                                    ▒▒▒▒▒▒░░░░▒▒▒▒▒▒▓▓  ▓▓▒▒▒▒░░▒▒▒▒▒▒▓▓▒▒▓▓  ░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                ░░▒▒▒▒▒▒▓▓░░▒▒▒▒▒▒▒▒▓▓  ▒▒▒▒▒▒▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                          ░░▒▒░░▒▒▒▒░░░░░░▒▒▓▓▒▒▒▒▒▒░░  ▒▒▒▒▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▒▒▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                          ░░▒▒▒▒  ▒▒▒▒▒▒▓▓▓▓  ▒▒▒▒▒▒▒▒▒▒░░▒▒░░▒▒░░▒▒▒▒▓▓▒▒░░▒▒▒▒▓▓▓▓░░▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                        ▒▒▒▒▒▒▓▓░░▒▒▓▓▒▒▒▒▓▓  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░▒▒▒▒▓▓░░▒▒▒▒▒▒▓▓▓▓░░░░░░▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                        ░░░░▒▒░░▒▒▒▒▓▓▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒░░▒▒▓▓▒▒░░░░▒▒▒▒▓▓▒▒░░░░▒▒░░░░░░▒▒▓▓▒▒▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                ░░▒▒▓▓  ▒▒▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▓▓▓▓▒▒▒▒▒▒▓▓▓▓▒▒▒▒░░▒▒▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░░░▒▒▓▓▓▓▒▒▓▓▒▒▓▓▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                                ▒▒▒▒▒▒  ░░▒▒▒▒▓▓  ▒▒▓▓▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▒▒▓▓▒▒▓▓▓▓▓▓▒▒▒▒░░▒▒▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▒░░░░$(R)$(RS)"
	@echo "$(R)$(LP)                              ▒▒▒▒▒▒▒▒  ░░▒▒▓▓▒▒▒▒░░▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░▒▒▓▓▒▒▓▓▓▓▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▒▒░░░░░░░░░░░░$(R)$(RS)"
	@echo "$(R)$(LP)                    ░░░░▒▒    ▒▒▒▒▒▒▒▒  ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▓▓░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                    ▓▓▒▒▒▒    ▒▒▒▒▓▓▓▓  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒░░▒▒▒▒▓▓░░░░░░▒▒░░░░░░▒▒▓▓▓▓▒▒░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░▒▒▒▒▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                    ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▓▓▓▓░░░░▒▒░░▓▓▒▒▒▒▓▓░░▒▒▓▓▒▒▒▒▓▓▓▓▓▓░░░░░░▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)                    ▓▓▒▒░░░░░░▓▓▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒░░▒▒▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)          ░░░░▓▓░░  ▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓░░▒▒▓▓▓▓▒▒▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░  ▒▒      ░░▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)        ░░▒▒▒▒▓▓░░▒▒░░▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒░░░░▒▒▓▓░░░░▒▒▒▒▒▒▓▓▒▒░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒  ▒▒░░▓▓▓▓▒▒▒▒$(R)$(RS)"
	@echo "$(R)$(LP)        ▒▒▒▒░░▓▓▒▒▒▒▒▒▒▒▓▓▒▒░░▒▒▒▒▒▒▓▓░░▒▒▒▒▒▒▒▒░░░░▒▒▒▒░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░▒▒░░░░░░▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▒▒▓▓$(R)$(RS)"
	@echo "$(R)$(LP)        ░░▒▒▒▒▓▓▓▓▓▓▒▒░░░░▒▒▓▓░░▒▒▒▒░░▒▒▒▒▒▒▓▓▓▓▓▓▒▒░░░░░░▒▒▓▓▒▒▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▒▒▓▓▓▓░░░░░░░░▒▒▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░▒▒▓▓▓▓▒▒▒▒▓▓▒▒▒▒▓▓░░░░▓▓░░▒▒▓▓▓▓▓▓▓▓▒▒▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)          ▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓░░▒▒▓▓▓▓▒▒▒▒▒▒▒▒▓▓▒▒░░▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓$(R)$(RS)"
	@echo "$(R)$(LP)        ▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▒▒▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▒▒▓▓▓▓▒▒▒▒▓▓▒▒▒▒$(R)$(RS)"
	@echo "$(R)$(LP)    ▒▒░░▒▒▒▒░░▓▓▓▓▒▒▒▒▒▒▓▓░░▒▒▒▒▒▒▓▓▓▓░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒░░░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓░░░░$(R)$(RS)"
	@echo "$(R)$(LP)  ░░░░░░░░▒▒▒▒▓▓▒▒░░▒▒▒▒▓▓░░░░▒▒▒▒▓▓░░░░░░▒▒▓▓░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓░░▒▒▓▓▒▒▓▓░░▒▒▒▒▓▓▓▓░░░░░░░░$(R)$(RS)"
	@echo "$(R)$(LP)  ░░▒▒░░░░░░░░░░░░▒▒▒▒▒▒▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓░░░░░░░░░░▒▒▓▓▒▒▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓░░▒▒▒▒▓▓░░▓▓▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓░░░░░░░░░░▒▒▒▒$(R)$(RS)"
	@echo "$(R)$(LP)      ░░▒▒░░░░▒▒▒▒▓▓▒▒▒▒▒▒▓▓▓▓▓▓▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)          ░░▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)              ░░▓▓▓▓▒▒▓▓▓▓▒▒░░░░░░░░░░░░░░▓▓▓▓▒▒░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░░░▓▓▓▓▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░▓▓▒▒▒▒▓▓▓▓░░▒▒▓▓▓▓▒▒░░▒▒▓▓▒▒▒▒░░░░▒▒▒▒▓▓▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                  ░░▓▓▓▓░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░▒▒▒▒▓▓▒▒░░▒▒▒▒▓▓▓▓░░░░░░▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                      ░░▒▒░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░▒▒░░░░░░▓▓▓▓▒▒░░▒▒░░▓▓▓▓▒▒▓▓░░▒▒▒▒▓▓▓▓▒▒░░▒▒▒▒░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                          ░░▒▒░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                              ░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░░░▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                  ░░▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░▒▒▒▒▓▓▒▒▓▓░░▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓▓░░▓▓▒▒▓▓▒▒▒▒░░▒▒▓▓▓▓▒▒▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                                      ░░▓▓▓▓░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒▒▒▓▓░░░░▒▒▒▒▒▒▒▒▓▓░░▒▒▒▒▒▒░░▓▓▒▒▒▒▓▓▓▓░░░░░░▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                                          ░░▒▒░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓▒▒░░░░▓▓░░░░░░▓▓▒▒▒▒▒▒░░▓▓▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▒▒░░▒▒▓▓▒▒░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                              ░░▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓░░▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                  ░░▒▒▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                      ░░▓▓▓▓▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                          ░░▓▓▓▓▒▒░░░░▓▓▒▒▒▒▓▓▓▓░░▓▓▒▒▓▓▓▓░░▓▓▒▒▒▒▓▓▒▒░░░░▒▒▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                              ░░▒▒░░░░░░░░▒▒░░░░▓▓▒▒▒▒▓▓▒▒▓▓░░▒▒▒▒▒▒░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)                                                                  ░░▒▒░░░░░░░░▒▒▓▓▒▒▒▒▓▓▓▓▓▓▒▒░░░░░░▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)      ░░▒▒▒▒                                                          ░░▒▒▒▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░                                                          ▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)    ░░░░░░░░▒▒                                                            ░░▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓░░                                                            ▒▒▒▒▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)      ▒▒▒▒▓▓▒▒        ▒▒▒▒                                                    ░░▓▓▓▓▓▓▓▓▓▓▓▓░░                                                    ▒▒▒▒        ▒▒▒▒▓▓▓▓$(R)$(RS)"
	@echo "$(R)$(LP)    ░░▒▒▒▒▓▓▒▒░░    ▒▒▒▒▒▒▒▒    ░░▒▒░░                                            ░░▓▓▓▓░░                                        ░░▒▒▒▒        ▒▒▒▒▒▒      ░░▒▒▒▒▓▓▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)  ░░░░░░▒▒▒▒▒▒▒▒    ▒▒▒▒▒▒▒▒    ░░░░░░░░                                                                                          ░░▒▒▒▒▒▒      ▒▒▓▓▓▓▒▒    ▒▒░░▒▒▒▒▒▒▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)    ▒▒▒▒░░▒▒▓▓░░  ░░░░▒▒▒▒░░▒▒  ▒▒▓▓▒▒░░░░  ░░░░  ░░▒▒░░      ░░▒▒                                        ▒▒▒▒        ▒▒    ▒▒░░  ▒▒▓▓▓▓▒▒▒▒  ▒▒░░▒▒▒▒▒▒    ░░▓▓▒▒▒▒▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)    ░░▒▒▒▒▒▒▒▒    ░░▒▒▒▒▒▒▒▒▒▒  ▒▒▒▒░░░░▒▒  ▒▒▓▓▒▒░░░░▓▓  ▒▒▒▒▒▒▓▓░░▒▒                                ▒▒░░▓▓▓▓▒▒▒▒  ░░▓▓▒▒▒▒░░▓▓  ▒▒▒▒▒▒▒▒▓▓  ▒▒▒▒▒▒▒▒▓▓░░    ▒▒▒▒▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)    ▒▒▓▓▒▒▒▒▒▒      ▓▓▒▒▒▒▓▓    ░░▒▒▒▒▒▒░░  ▒▒▒▒▒▒▒▒▓▓░░  ▒▒▒▒░░▒▒▒▒▒▒      ░░                ░░      ▒▒▒▒▒▒▒▒▒▒▓▓  ░░▒▒▒▒▓▓▓▓▒▒  ░░▒▒▒▒▓▓▒▒    ▓▓▓▓▓▓▓▓      ▒▒▒▒▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)      ▒▒▒▒▒▒▓▓      ▒▒▒▒▒▒▓▓    ░░▒▒▒▒▒▒    ░░▒▒▒▒▒▒▓▓    ░░▒▒▒▒▓▓▓▓░░      ▒▒                ▒▒      ░░▒▒▒▒▓▓▓▓▒▒    ▒▒▒▒▓▓▓▓      ▒▒▒▒▓▓░░    ▓▓▒▒▒▒▓▓      ▓▓▒▒▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)    ░░▒▒▒▒▓▓▒▒      ▓▓▒▒▒▒▓▓    ░░░░▒▒▒▒      ▒▒▒▒▒▒░░      ▒▒▒▒▓▓▒▒      ▒▒▒▒░░            ░░▒▒▓▓      ▒▒▒▒▓▓▓▓      ▒▒▒▒▓▓▒▒      ▒▒▓▓▓▓░░    ▓▓▒▒▓▓▓▓      ▒▒▓▓▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)  ░░▒▒▒▒▒▒▒▒▒▒▒▒  ░░▒▒▒▒▒▒▓▓░░  ▒▒▒▒▒▒▒▒░░    ▒▒▒▒▓▓▒▒    ▒▒▒▒▒▒▓▓▒▒▒▒    ▒▒▒▒▓▓            ▒▒▒▒▓▓    ▒▒▒▒▓▓▒▒▓▓▒▒    ▒▒▒▒▓▓▒▒    ░░▒▒▓▓▓▓▒▒  ░░▓▓▒▒▓▓▓▓░░  ▒▒▒▒▓▓▓▓▓▓▒▒░░$(R)$(RS)"
	@echo "$(R)$(LP)  ░░▒▒▒▒▒▒▒▒▒▒▓▓  ░░░░▒▒▒▒░░▒▒  ▒▒░░▒▒▒▒▒▒    ░░▒▒░░▒▒    ▒▒▒▒░░▒▒▒▒▒▒  ▒▒▒▒▒▒▓▓░░        ░░▒▒▒▒▓▓▓▓  ▒▒▒▒▒▒▒▒▓▓▓▓    ▒▒▒▒▒▒▒▒    ▒▒▒▒▒▒▒▒▓▓  ▒▒▒▒▒▒▒▒▒▒░░  ▒▒▒▒▒▒▓▓▒▒▓▓░░$(R)$(RS)"
	@echo "$(R)$(LP)    ▒▒▒▒▒▒▒▒▓▓░░  ░░▒▒▒▒▒▒▒▒░░  ▒▒▒▒▒▒▓▓░░    ▒▒▒▒▒▒▓▓    ░░▒▒▒▒▒▒▒▒      ▒▒▒▒▒▒            ░░▒▒▒▒      ▒▒▒▒▓▓▓▓░░    ▓▓▒▒▒▒▓▓    ░░▒▒▒▒▓▓▒▒  ░░▒▒▒▒▓▓▓▓░░  ░░▒▒▒▒▓▓▓▓▒▒$(R)$(RS)"
	@echo "$(R)$(LP)        ▒▒░░          ▒▒▒▒          ░░          ░░            ░░                                            ░░                        ░░          ▒▒▒▒            ▒▒$(R)$(RS)"













    @echo "$(R)$(LP)            ████$(R)$(RS)"
    @echo "$(R)$(LP)          ▒▒▓▓▓▓▒▒$(R)$(RS)"
    @echo "$(R)$(LP)            ▓▓▓▓░░$(R)$(RS)"
    @echo "$(R)$(LP)            ▓▓▓▓                    ░░$(R)$(RS)"
    @echo "$(R)$(LP)      ▓▓████████████                ░░$(R)$(RS)"
    @echo "$(R)$(LP)      ░░██████████▓▓            ░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)        ▓▓████████▓▓            ░░░░░░░░░░            ▒▒$(R)$(RS)"
    @echo "$(R)$(LP)        ▒▒████████              ░░░░░░░░              ▓▓░░$(R)$(RS)"
    @echo "$(R)$(LP)          ██▓▓████                ░░░░░░              ▓▓  ▒▒            ░░░░$(R)$(RS)"
    @echo "$(R)$(LP)      ░░▓▓▓▓▓▓▓▓▓▓▒▒              ░░░░░░            ██▓▓▒▒▓▓          ░░░░░░░░            ▒▒▓▓▓▓▓▓▓▓▓▓▓▓$(R)$(RS)"
    @echo "$(R)$(LP)        ▒▒████████▒▒            ░░░░░░░░░░          ██▓▓▓▓██        ░░░░░░░░░░░░          ▓▓▓▓▓▓████▓▓▓▓$(R)$(RS)"
    @echo "$(R)$(LP)          ████████                ▒▒▒▒▒▒            ▓▓██████        ░░░░░░░░░░░░░░░░      ░░▓▓▓▓██▓▓▓▓▒▒              ░░$(R)$(RS)"
    @echo "$(R)$(LP)          ████████                ░░░░░░            ▒▒████▓▓        ░░░░░░░░░░░░░░░░        ██████████            ░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)          ██▓▓████                ░░░░░░            ░░▓▓██▓▓        ░░░░░░░░░░░░░░░░░░      ██▓▓██████            ░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)          ██▓▓████                ░░░░░░            ▓▓▓▓▓▓▓▓        ░░░░░░░░░░    ░░░░      ██████████            ░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)          ██▓▓▓▓██                ░░░░░░            ░░████▒▒        ░░░░░░░░░░░░            ██████████            ░░▒▒░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)          ██▓▓▓▓▓▓                ░░░░░░              ██████          ░░░░░░░░░░░░          ██████████            ░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)        ░░▓▓▓▓▓▓▓▓                ░░░░░░              ████            ░░░░░░░░░░░░░░        ██████████              ▒▒▒▒▒▒$(R)$(RS)"
    @echo "$(R)$(LP)        ██▓▓▓▓▓▓▓▓                ░░░░░░░░            ▓▓▓▓            ░░░░░░░░░░░░░░        ██████████              ░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)        ██▓▓▓▓▓▓▓▓              ░░░░░░░░░░            ▓▓██▓▓        ░░░░░░░░░░░░░░░░        ██████████              ░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)        ██▓▓▓▓▓▓▓▓██            ░░░░░░░░░░          ░░▓▓▓▓▓▓          ░░░░░░░░░░░░░░      ░░██▓▓██▓▓██░░          ░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)      ▓▓▓▓▓▓▓▓▓▓▓▓██▒▒        ░░░░░░░░░░░░░░        ▓▓▓▓▓▓▓▓▒▒          ░░░░░░░░░░        ▓▓▓▓▓▓██▓▓▓▓██          ░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)  ▓▓██▓▓██████████▓▓▓▓▓▓    ░░░░░░░░░░░░░░░░░░    ░░██▓▓████▓▓▒▒      ░░░░░░░░░░░░░░    ▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▒▒      ░░░░░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)  ██████████████████████░░  ░░░░░░░░░░░░░░░░▒▒    ██▓▓▓▓██▓▓▓▓██    ░░░░░░▒▒▒▒▒▒▒▒░░    ████████████▓▓██▓▓    ▒▒░░░░░░░░░░░░░░░░$(R)$(RS)"
    @echo "$(R)$(LP)▒▒████▓▓▓▓▓▓████▓▓▓▓████▒▒░░▒▒░░░░░░░░░░░░░░▒▒░░░░██▓▓▓▓██▓▓██▓▓▒▒░░▒▒░░░░░░░░░░░░░░░░░░██▓▓▓▓▓▓▓▓████▓▓▓▓░░░░▒▒░░░░░░░░░░░░░░░░░░$(R)$(RS)"





	while (minishell->lexer->tokens[count.i])
	{
		// minishell->commands[count.j] = malloc(sizeof(char) * (ft_strlen(minishell->lexer->tokens[count.i] + 1)));
		if (ft_strncmp(minishell->lexer->tokens[count.i], ">", 1) == 0)
			count.i += 2;
		if (ft_strncmp(minishell->lexer->tokens[count.i], "<", 1) == 0)
			count.i += 2;
		if (ft_strncmp(minishell->lexer->tokens[count.i], "|", 2) == 0)
			return (minishell->commands = NULL, minishell);
		if (ft_strncmp(minishell->lexer->tokens[count.i], "\"", 2) == 0)
			count.i++;
		if (ft_strncmp(minishell->lexer->tokens[count.i], "\'", 2) == 0)
			count.i++;
		if (ft_strncmp(minishell->lexer->tokens[count.i], "$", 1) == 0)
			count.i++;
		// if (check_if_command(minishell, minishell->lexer->tokens[count.i]) == TRUE)
		// 	minishell->commands[count.j++] = ft_strdup(minishell->lexer->tokens[count.i]);
		while (minishell->lexer->tokens[count.i])
		{
			count.trigger = 0;
			if (ft_strncmp(minishell->lexer->tokens[count.i], "|", 2) != 0)
			{
				count.i++;
				count.trigger = 1;
			}
			// minishell->flags[count.k] = malloc(sizeof(char *) * );
			if (check_if_command(minishell, minishell->lexer->tokens[count.i]) == TRUE && (count.trigger == 1 || count.j == 0))
				minishell->commands[count.j++] = ft_strdup(minishell->lexer->tokens[count.i]);
			// minishell->flags[count.k][count.m++] = ft_strdup(minishell->lexer->tokens[count.i++]);
			if (count.trigger == 0)
				count.i++;
		}
		// printf("count.i = %i\n", count.i);
		// count.i++;
		// printf("%s\n", minishell->lexer->tokens[count.i]);
	}

	// t_shell_s		*lexer(t_shell_s *minishell, char *str)
// {
// 	t_counter	count;

// 	if (!minishell)
// 		return (NULL);
// 	if (!str)
// 		return (minishell);
// 	count.i = 0;
// 	count.j = 0;
// 	count.k = 0;
// 	if (number_of_dquotes(str) % 2 == 1 || number_of_squotes(str) % 2 == 1)
// 	{
// 		free_everything(minishell);
// 		printf("Minishell: Error: lexer--utils3.c: Odd number of quotes\n");
// 		exit(1);
// 		// return (minishell);
// 	}
// 	minishell->lexer = ft_calloc(sizeof(t_lexer), 1);
// 	minishell->lexer->tokens = malloc(sizeof(char *) * (num_of_tokens(str) + 1));
// 	printf("num of tokens = %i\n", num_of_tokens(str));
// 	// minishell->lexer->num_of_dquotes = number_of_dquotes(str);
// 	while (str[count.i])
// 	{
// 		count.trigger = 0;
// 		if (str[count.i] == '\"')
// 		{
// 			count.i++;
// 			count.trigger = 1;
// 			minishell->lexer->tokens[count.j] = malloc(sizeof(char) * ft_strlen_dquotes(str, count.i) + 1);
// 			while (str[count.i] && str[count.i] != '\"' && ((!str[count.i + 1]) || (str[count.i + 1] && str[count.i + 1] != ' ' && str[count.i + 1] != '\t')))
// 			{
// 				// if (str[count.i] == '\"' && (str[count.i + 1] && (str[count.i + 1] == ' ' || str[count.i + 1] == '\t')))
// 				// 	break ;
// 				// printf("count.i in lexer dquotes = %i\n", count.i);
// 				minishell->lexer->tokens[count.j][count.k++] = str[count.i++];
// 			}
// 			printf("%c\n", str[count.i]);
// 			// if (str[count.i + 1] && str[count.i + 1] != ' ' && str[count.i + 1] != '\t')
// 			// {
// 			// 	count.i++;
// 			// 	while (str[count.i] && str[count.i] != ' ' && str[count.i] != '\t')
// 			// 		minishell->lexer->tokens[count.j][count.k++] = str[count.i++];
// 			// }
// 			minishell->lexer->tokens[count.j][count.k] = '\0';
// 			count.k = 0;
// 			if (!minishell->lexer->tokens[count.j++])
// 				return (minishell);
// 		}
// 		else if (str[count.i] == '\'')
// 		{
// 			count.i++;
// 			minishell->lexer->tokens[count.j] = malloc(sizeof(char) * ft_strlen_squotes(str, count.i) + 1);
// 			while (str[count.i] != '\'')
// 				minishell->lexer->tokens[count.j][count.k++] = str[count.i++];
// 			if (str[count.i + 1] && str[count.i + 1] != ' ' && str[count.i + 1] != '\t')
// 			{
// 				count.i++;
// 				while (str[count.i] && str[count.i] != ' ' && str[count.i] != '\t')
// 					minishell->lexer->tokens[count.j][count.k++] = str[count.i++];
// 			}
// 			minishell->lexer->tokens[count.j][count.k] = '\0';
// 			count.k = 0;
// 			if (!minishell->lexer->tokens[count.j++])
// 				return (minishell);
// 		}
// 		else
// 		{
// 			count.i = skip_spaces(str, count.i);
// 			minishell->lexer->tokens[count.j++] = get_next_word(str, count.i);
// 			// printf("token[%i]: %s\n", count.j - 1, minishell->lexer->tokens[count.j - 1]);
// 		}
// 		// count.i = skip_spaces(str, count.i);
// 		// while (str[count.i] && (str[count.i] != ' ' && str[count.i] != '\t'))
// 		// {

// 		// }
// 		// if (count.i != is_symbol(str[count.i]) == FALSE)
// 		count.i = skip_token(str, count.i);
// 		count.i = skip_spaces(str, count.i);
// 		printf("count.i = %i\n", count.i);
// 	}
// 	minishell->lexer->tokens[count.j] = NULL;
// 	for (int x = 0; minishell->lexer->tokens[x]; x++)
// 		printf("token[%i] = %s\n", x, minishell->lexer->tokens[x]);
// 	return (minishell);
// }
// while (str[count.i] && (str[count.i] != '\"' && ((!str[count.i + 1]) || (str[count.i + 1] && str[count.i + 1] != ' ' && str[count.i + 1] != '\t'))))


// t_shell_s	*lexer(t_shell_s *minishell, char *str)
// {
// 	t_counter	count;

// 	count.i = 0;
// 	count.j = 0;
// 	if (!minishell)
// 		return (NULL);
// 	if (!str)
// 		return (minishell);
// 	minishell->lexer = ft_calloc(sizeof(t_lexer), 1);

// 	minishell->lexer->num_of_dquotes = number_of_dquotes(str);
// 	if (minishell->lexer->num_of_dquotes % 2 == 1)
// 		return (printf("Minishell: Error: lexer--utils3.c: Odd number of quotes\n"), minishell);
// 	minishell->lexer->tokens = malloc(sizeof(char *) * (minishell->lexer->num_of_dquotes + 1));
// 	while (str[count.i])
// 	{
// 		minishell->lexer->tokens[count.j] = malloc(sizeof(char) * (ft_strlen(str) + 1));
// 		if (str[count.i] == '\"' && str[++count.i])
// 		{
// 			count.k = 0;
// 			while (str[count.i] && str[count.i] != '\"')
// 				minishell->lexer->tokens[count.j][count.k++] = str[count.i++];
// 			minishell->lexer->tokens[count.j][count.k] = '\0';
// 			count.j++;
// 		}
// 		count.i++;
// 	}
// 	// printf("%s\n", minishell->lexer->tokens[0]);
// 	// printf("%s\n", minishell->lexer->tokens[1]);
// 	minishell->lexer->tokens[count.j] = NULL;
// 	return (minishell);
// }
